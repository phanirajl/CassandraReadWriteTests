from tqdm import tqdm
from datasketch import MinHash, MinHashLSH


def main() -> None:
    for _ in tqdm(range(1), desc="Create finding example:"):
        hash = [5638535, 8158198, 1921504, 45510584, 6407642, 13784863, 27908234,
                4413515, 37388746, 14740216, 47810288, 25516738, 14036322, 2728902,
                7328387, 14658219, 3776681, 6060038, 62222141, 5268573, 26524687,
                15115193, 11911134, 60550787, 14843118, 11938474, 7162717, 165071625,
                47588516, 36075986, 9115653, 33569522, 58296499, 1642824, 3416758,
                33463365, 31598052, 22673357, 22262908, 29664567, 68199442, 22088604,
                114699637, 20280, 11647013, 5720049, 1410363, 11321468, 17496568,
                11415447, 98986937, 19218070, 1984385, 9495317, 17770234, 15510138,
                24356449, 64796248, 21716242, 5459357, 6636012, 4100227, 6801194,
                15131800, 18210347, 30168309, 830361, 2482313, 17425664, 22473001,
                5315634, 18791437, 10199298, 7022359, 1640663, 26096617, 15287599,
                7304961, 20986807, 22982309, 45579390, 3362206, 16071017, 47943739,
                15211354, 2668009, 5352617, 54984622, 22692168, 14315500, 47944073,
                37651417, 1235095, 5191039, 4720464, 808635, 2106286, 21061594,
                20201936, 71046479, 14060648, 6074142, 28989986, 11265120, 5258719,
                43885691, 9127284, 10377744, 14746103, 22471031, 38554067, 3234390,
                24587493, 28228128, 78420597, 8140347, 26262277, 3048163, 6256328,
                2668635, 52038834, 6874164, 295165, 49207461, 11782051, 20497648,
                43198849, 21271666, 23312820, 45119624, 4415676, 4735848, 17245777,
                9895432, 906364, 12401987, 44068484, 1053557, 5251402, 37952318,
                9823248, 18663434, 4483199, 10338905, 16023166, 24665801, 16103981,
                24138276, 7351233, 27286160, 2513310, 3767162, 23034558, 8285585,
                22544058, 5837437, 38222538, 4472194, 36173714, 4710077, 17211605,
                15552826, 7573687, 17096334, 1771010, 12256873, 7515546, 10626500,
                12917844, 9218788, 14151504, 4589199, 8294204, 50582536, 23879568,
                4974316, 6419469, 6369336, 23305381, 72510197, 16524609, 20298502,
                1539585, 2811839, 16860502, 45431842, 7901611, 6969572, 19641603,
                20205868, 1890575, 12710428, 38616870, 3479605, 252190, 16165197,
                25484997, 19500002, 27550456, 58812080, 94618209, 10017002, 19532882,
                20263978, 13723893, 16899486, 5298236, 17477939, 89919455, 64906060,
                28973650, 22072420, 74853229, 4566589, 3359629, 11707554, 2719328,
                19512623, 6017081, 25087175, 1199910, 12336694, 7740007, 4342605,
                11953558, 49291962, 26325181, 8415944, 5904848, 10000287, 28279660,
                23621606, 1435119, 15545262, 62091103, 18108763, 46762584, 3612882,
                8981965, 19001697, 2602419, 11300302, 38181723, 41750804, 8934344,
                15326115, 4119306, 15343933, 8799582, 11643455, 4313200, 5382282,
                35791030, 38594668, 10367478, 22778405]
        minhash = MinHash(num_perm=256, hashvalues=hash)

    for _ in tqdm(range(1), desc="Connect to existing db:"):
        lsh = MinHashLSH(
            threshold=0.5, num_perm=256, storage_config={
                'type': 'cassandra',
                'basename': b'perftest',
                'cassandra': {
                    'seeds': ['127.0.0.1'],
                    'keyspace': 'th_millions_perfomance',
                    'replication': {
                        'class': 'SimpleStrategy',
                        'replication_factor': '1',
                    },
                    'drop_keyspace': False,
                    'drop_tables': False,
                }
            }
        )

    try:
        for _ in tqdm(range(1), desc="Find minHash similarity:"):
            result = lsh.query(minhash)
        print("Approximate neighbours with Jaccard similarity > 0.5", result)
    except BaseException as e:
        print(str(e))
        print("Error")


if __name__ == "__main__":
    main()
